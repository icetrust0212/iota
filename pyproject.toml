[project]
name = "iota-monorepo"
version = "0.1.0"
description = "IOTA: An Incentivized, Orchestrated Training Architecture for Foundation Model Training"
authors = [{ name = "Macrocosmos.ai" }]
readme = "README.md"
requires-python = ">=3.10"
dependencies = []

[tool.uv.sources]
common = { workspace = true }
subnet = { workspace = true }
miner = { workspace = true }
validator = { workspace = true }

[tool.uv.workspace]
members = ["shared/*", "src/*"]

[tool.uv]
dev-dependencies = [
    "black>=25.1.0",
    "pre-commit>=4.2.0",
    "vulture>=2.14",
    "ipykernel>=6.29.5",
    "common",
    "subnet",
    "miner",
    "validator",
    "tqdm>=4.67.1",
]
package = false

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| AutoAWQ
| _build
| buck-out
| build
)/
'''

[tool.flake8]
max-line-length = 120
extend-ignore = "D203,E203,E251,E266,E302,E305,E401,E402,E501,F401,F403,W503"
exclude = ".git,__pycache__,dist,.venv,venv,*/lib/python*/site-packages,*/lib64/python*/site-packages"

[tool.isort]
atomic = true
profile = "black"
line_length = 120
skip_gitignore = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    "AutoAWQ",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    ".venv",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["C9", "E4", "E7", "E9", "F"]
# Ignore "Module top level import" due to the settings initialization.
ignore = ["E402", "E741", "C901", "F841", "F821"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
